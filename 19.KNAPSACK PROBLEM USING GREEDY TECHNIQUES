#include <stdio.h>
#include <stdlib.h>
typedef struct {
    int weight;
    int value;
    float ratio;
} Item;
int compare(const void* a, const void* b) {
    Item* item1 = (Item*)a;
    Item* item2 = (Item*)b;
    return (item2->ratio > item1->ratio) - (item1->ratio > item2->ratio); 
}
float fractionalKnapsack(int capacity, Item items[], int n) {
qsort(items, n, sizeof(Item), compare);
    int currentWeight = 0;
    float totalValue = 0.0;
    for (int i = 0; i< n; i++) {
        if (currentWeight + items[i].weight<= capacity) {
currentWeight += items[i].weight;
totalValue += items[i].value;
        } else {
            int remainingWeight = capacity - currentWeight;
totalValue += items[i].value * ((float)remainingWeight / items[i].weight);
            break; 
        }
    }
    return totalValue;
}
int main() {
    int n, capacity;
printf("Enter the number of items: ");
scanf("%d", &n);
printf("Enter the capacity of the knapsack: ");
scanf("%d", &capacity);
    Item items[n];
    for (int i = 0; i< n; i++) {
printf("Enter value and weight of item %d: ", i + 1);
scanf("%d %d", &items[i].value, &items[i].weight);
        items[i].ratio = (float)items[i].value / items[i].weight;  
    }
    float maxValue = fractionalKnapsack(capacity, items, n);
printf("Maximum value in the knapsack: %.2f\n", maxValue);
    return 0;
}

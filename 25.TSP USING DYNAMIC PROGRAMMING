#include <stdio.h>
#include <limits.h>
#define N 4 
#define INF INT_MAX
int dist[N][N] = {
    {0, 20, 42, 35},
    {20, 0, 30, 34},
    {42, 30, 0, 12},
    {35, 34, 12, 0}
};
int dp[1 << N][N];
int tsp(int mask, int pos) {
    if (mask == ((1 << N) - 1))
        return dist[pos][0];
    if (dp[mask][pos] != -1)
        return dp[mask][pos];
    int ans = INF;
    for (int city = 0; city < N; city++) {
        if (!(mask & (1 << city))) {
            int newAns = dist[pos][city] + tsp(mask | (1 << city), city);
            if (newAns<ans)
ans = newAns;
        }
    }
    return dp[mask][pos] = ans;
}
int main() {
    for (int i = 0; i< (1 << N); i++)
        for (int j = 0; j < N; j++)
dp[i][j] = -1;
    int result = tsp(1, 0);
printf("The minimum cost of the tour is %d\n", result);
    return 0;
}
